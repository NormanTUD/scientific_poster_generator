name: Main tests

on:
  push:
    branches: "**"
  pull_request:
    branches: "**"

permissions:
  contents: read

env:
  DB_USER: 'poster_generator'

jobs:
  main-tests:
    permissions:
      contents: write

    environment: Production

    runs-on: ubuntu-latest

    steps:
    - uses: actions/checkout@v4

    # - name: Grand folder permissions
    #   run: |
    #     sudo chmod +rw /var/cache/apt/archives/partial
    #   # sudo chmod +rw /var/cache/apt/archives/lock

    - name: Cache APT packages
      id: apt-cache
      uses: actions/cache@v4
      with:
        path: /var/cache/apt/archives
        key: apt-packages-${{ runner.os }}-${{ hashFiles('.github/workflows/main.yml') }}
        restore-keys: |
          apt-packages-${{ runner.os }}-

    # - name: Move cached packages back
    #   run: |
    #     sudo cp ./apt-cache/*.deb /var/cache/apt/archives/ || true

    - name: Install dependencies
      if: steps.apt-cache.outputs.cache-hit != 'true'
      run: |
        sudo apt-get update
        sudo apt install mariadb-server
        pip install selenium
        pip install mypy
    #   sudo apt-get install -y php mysql-server

    # - name: Copy APT cache to workspace
    #   run: |
    #     mkdir -p ./apt-cache
    #     sudo cp /var/cache/apt/archives/*.deb ./apt-cache/


    # - name: Pull MariaDB image manually
    #   run: docker pull mariadb:latest

    - uses: getong/mariadb-action@v1.11
      with:
        host port: 3800
        container port: 3307
        character set server: 'utf8'
        collation server: 'utf8_general_ci'
        mariadb version: '10.4.10'
        mysql database: 'some_test'
        mysql root password: password
        mysql user: ${{ env.DB_USER }}
        mysql password: password

    - name: Run test script
      run: |
        ./tests/test_env

    - name: Create a new version
      if: ${{ success() }}
      run: |
        echo "Creating new version"
        git tag ${{ github.run_number }} || true
        git push origin --tags || true
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

    - name: Archive code coverage results
      uses: actions/upload-artifact@v4
      with:
        name: code-coverage-report
        path: tests/test_report.json

    - name: Archive Changed Database After Tests
      uses: actions/upload-artifact@v4
      with:
        name: store-post-test-sql
        path: tests/post_test.sql
